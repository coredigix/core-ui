// returns color depending on input contrast

// @function contrast-switch( $color, $dark-color: $black, $light-color: $white){
// 	@if(lightness($color) > 50){
// 		@return $dark-color;
// 	} @else {
// 		@return $light-color;
// 	}
// }
@function _gamma($channel) {
  @if $channel < 0.03928 {
    @return $channel / 12.92;
  } @else {
    $c: ($channel + 0.055) / 1.055;
    @if function-exists("pow") {
      @return pow($c, 2.4);
    } @else {
      @return 0.56 * $c * $c * $c + 0.44 * $c * $c;
    }
  }
}

@function _lightness($hex-color) {
	$-local-red-raw: red(rgba($hex-color, 1));
	$-local-green-raw: green(rgba($hex-color, 1));
	$-local-blue-raw: blue(rgba($hex-color, 1));

	$-local-red: _gamma($-local-red-raw / 255);
	$-local-green: _gamma($-local-green-raw / 255);
	$-local-blue: _gamma($-local-blue-raw / 255);

	@return $-local-red * 0.2126 + $-local-green * 0.7152 + $-local-blue * 0.0722;
}

@function _contrast-ratio($color-1, $color-2) {
	$-local-lightness-1: _lightness($color-1) + 0.05;
	$-local-lightness-2: _lightness($color-2) + 0.05;

	@if $-local-lightness-1 > $-local-lightness-2 {
		@return $-local-lightness-1 / $-local-lightness-2;
	} @else {
		@return $-local-lightness-2 / $-local-lightness-1;
	}
}


@function contrast-switch( $color, $dark-color: $black, $light-color: $white){
	$toDark: _contrast-ratio($color, $dark-color);
	$toLight: _contrast-ratio($color, $light-color);
	$isDark: $toDark >= $toLight;

	@return if($isDark, $dark-color, $light-color);
}
